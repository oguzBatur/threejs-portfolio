/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 .\room.glb --types
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { Lightformer, OrbitControls, Stage, useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import Text from '../components/Text'

type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.Mesh
    Cube_1: THREE.Mesh
    Cube001: THREE.Mesh
    Cube001_1: THREE.Mesh
    Cube001_2: THREE.Mesh
    KeyboardCable: THREE.Mesh
    Cube003: THREE.Mesh
    Cube003_1: THREE.Mesh
    Cube004: THREE.Mesh
    Cube004_1: THREE.Mesh
    MouseCable: THREE.Mesh
    Glass_Table: THREE.Mesh
    MousePad: THREE.Mesh
    Turkish_Resume: THREE.Mesh
    ['Oğuz_Batur_Sarıöz_Resume1-2']: THREE.Mesh
  }
  materials: {
    MonitorBase: THREE.MeshStandardMaterial
    MonitorScreen: THREE.MeshStandardMaterial
    KeyBaseMat: THREE.MeshStandardMaterial
    KeysMat: THREE.MeshPhysicalMaterial
    KeysUnderMat: THREE.MeshPhysicalMaterial
    Cable: THREE.MeshStandardMaterial
    MouseBaseMat: THREE.MeshStandardMaterial
    Glass: THREE.MeshPhysicalMaterial
    ['Oğuz_Batur Sarıöz_Resume1-1']: THREE.MeshStandardMaterial
    ['Oğuz_Batur Sarıöz_Resume1-2']: THREE.MeshStandardMaterial
  }
}

export function PcSetup(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/room.glb') as GLTFResult
  return (
    <group  {...props} dispose={null}>
      <group castShadow position={[-0.48, 0.1, 1.26]} rotation={[0, 0.41, 0]} scale={[1.21, 0.07, 0.54]}>
        <mesh geometry={nodes.Cube001.geometry} material={materials.KeyBaseMat} />
        <mesh geometry={nodes.Cube001_1.geometry} material={materials.KeysMat} />
        <mesh geometry={nodes.Cube001_2.geometry} material={materials.KeysUnderMat} />
        <mesh geometry={nodes.KeyboardCable.geometry} material={materials.Cable} position={[-0.86, -0.67, -1.25]} rotation={[0, -0.57, 0]} scale={[1.06, 15.24, 1.72]} />
      </group>
      <group castShadow position={[0, 2.55, -2.22]} rotation={[0, 0, 0]} scale={[2, 1, 1]}>
        <mesh geometry={nodes.Cube003.geometry} material={materials.MonitorBase} />
        <mesh geometry={nodes.Cube003_1.geometry} material={materials.MonitorScreen} />
      </group>
      <group castShadow position={[2.33, 0.13, 1.45]} rotation={[0, -0.2, 0]} scale={[0.2, 0.8, 0.38]}>
        <mesh geometry={nodes.Cube004.geometry} material={materials.KeysUnderMat} />
        <mesh geometry={nodes.Cube004_1.geometry} material={materials.MouseBaseMat} />
        <mesh geometry={nodes.MouseCable.geometry} material={materials.Cable} position={[-4.93, -0.09, -0.54]} rotation={[0, 0.3, 0]} scale={[4.96, 1.26, 2.76]} />
      </group>
      <mesh geometry={nodes.Glass_Table.geometry} material={materials.Glass} position={[-0.33, 0, 0]} scale={5.72} />
      <mesh geometry={nodes.MousePad.geometry} material={materials.Cable} position={[2.34, 0.04, 1.29]} scale={[1, 0.66, 1]} />
    </group>
  )
}

useGLTF.preload('/room.glb')
